{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,cAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACAJ,EAAWK,OAAOC,OAAO,IACjCR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACvCN,EAAc,MAQN,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAkBbM,GAlBa,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAyBtC,OAlBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAM1B,CAACpB,IAKGqB,EDrB2BK,CAAc1B,GAAnCa,EAHwB,EAG7BN,KAAca,EAHe,EAGfA,QAGtB,OACI,qCACI,oBAAKJ,UAAU,yCAAf,SAAyDhB,IAChEoB,GAAW,mBAAIJ,UAAU,wCAAd,qBAEJ,qBAAKA,UAAU,YAAf,SAIQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfxBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,iBAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAY9B,OACI,qCAEI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAIA,6BAGQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MC5BjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.067a655f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"hola mundo\")\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       if(inputValue.trim().length>2){\r\n  setCategories(cats => [inputValue,...cats ]);\r\nsetInputValue(\"\");\r\n       }\r\n      \r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\nsetCategories: PropTypes.func.isRequired\r\n\r\n}","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=3XKb0P7VCbcjhZL4Rg90smaxUo1cE3cS`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n\r\n\r\n        }\r\n\r\n    })\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n   \r\n \r\n    const { data:images,  loading } = useFetchGifs( category);\r\n\r\n  \r\n    return (\r\n        <>\r\n            <h3  className=\"card animate__animated animate__fadeIn\">{category}</h3>\r\n    {loading && <p  className=\"card animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n\r\n                    });\r\n               \r\n\r\n            });\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragron Ball']);\r\n\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     setCategories([...categories, 'comunismo']);\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <hr />\r\n\r\n\r\n\r\n            <ol>\r\n\r\n                {\r\n                    categories.map(category =>(\r\n\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n\r\n                            />\r\n                    ))\r\n                }\r\n\r\n\r\n            </ol>\r\n\r\n\r\n\r\n        </>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}